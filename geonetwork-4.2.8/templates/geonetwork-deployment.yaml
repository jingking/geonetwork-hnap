apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geonetwork.fullname" . }}
  annotations:
    geonetwork-hnap.version: {{ .Chart.Version }}
  labels:
{{ include "geonetwork.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      geonetwork-hnap/app: {{ include "geonetwork.name" . }}
      geonetwork-hnap/siteName: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        geonetwork-hnap/app: {{ include "geonetwork.name" . }}
        geonetwork-hnap/siteName: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DATA_DIR
              value: /catalogue-data
            - name: ES_HOST
              value: {{ .Values.elasticsearch.host }}
            - name: ES_PORT
              value: "{{ .Values.elasticsearch.port }}"
            - name: ES_PROTOCOL
              value: {{ .Values.elasticsearch.protocol }}
            - name: GEONETWORK_DB_HOST
              value: {{ .Values.postgres.host }}
            - name: GEONETWORK_DB_NAME
              value: {{ .Values.postgres.dbname }}
            - name: GEONETWORK_DB_PASSWORD
              value: {{ .Values.postgres.password }}
            - name: GEONETWORK_DB_PORT
              value: "{{ .Values.postgres.port }}"
            - name: GEONETWORK_DB_TYPE
              value: {{ .Values.db_type }}
            - name: GEONETWORK_DB_USERNAME
              value: {{ .Values.postgres.dbuser }}
            - name: GEONETWORK_MICROSERVICESPROXY_TARGETURI
              value: http://{{ .Values.ogcapi.host }}:{{ .Values.ogcapi.port }}
            - name: JAVA_OPTS
              value: |
                -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC -Dgeonetwork.resources.dir=/catalogue-data/resources -Dgeonetwork.data.dir=/catalogue-data -Dgeonetwork.codeList.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/codelist -Dgeonetwork.schema.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins
            - name: KB_URL
              value: http://{{ .Values.kibana.host }}:{{ .Values.kibana.port }}
            - name: GEONETWORK_SECURITY_TYPE
              value: {{ .Values.security.type }}  
            - name: OPENIDCONNECT_CLIENTSECRET
              value: {{ .Values.security.openidconnect.clientsecret }} 
            - name: OPENIDCONNECT_CLIENTID
              value: {{ .Values.security.openidconnect.clientid }}               
            - name: OPENIDCONNECT_SERVERMETADATA_JSON_TEXT
              value: {{ .Files.Get "ad_config.json" | toPrettyJson }}
            - name: OPENIDCONNECT_IDTOKENROLELOCATION
              value: {{ .Values.security.openidconnect.idtokenrolelocation }}                                         
          ports:
            - name: tcp
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /catalogue-data
              name: geonetwork-volume
              subPath: gn
      restartPolicy: Always
      volumes:
        - name: geonetwork-volume
          persistentVolumeClaim:
            claimName: {{ include "geonetwork.fullname" . }}-pvc

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
